{"ast":null,"code":"import { Observable, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/task.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../task-item/task-item.component\";\nimport * as i5 from \"@angular/router\";\n\nfunction TaskListComponent_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n\n      const _r0 = i0.ɵɵreference(4);\n\n      _r0.value = \"\";\n      return ctx_r5.clearSearch();\n    });\n    i0.ɵɵtext(1, \"\\u00D7\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TaskListComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"p\");\n    i0.ɵɵtext(2, \"Loading tasks...\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction TaskListComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.error, \" \");\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"completed\": a0\n  };\n};\n\nfunction TaskListComponent_div_46_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"app-task-item\", 35);\n    i0.ɵɵlistener(\"toggleComplete\", function TaskListComponent_div_46_div_1_div_3_Template_app_task_item_toggleComplete_1_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(3);\n      return ctx_r11.toggleTaskCompletion($event);\n    })(\"delete\", function TaskListComponent_div_46_div_1_div_3_Template_app_task_item_delete_1_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext(3);\n      return ctx_r13.deleteTask($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const task_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, task_r10.isCompleted));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"task\", task_r10);\n  }\n}\n\nfunction TaskListComponent_div_46_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Search Results\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, TaskListComponent_div_46_div_1_div_3_Template, 2, 4, \"div\", 32);\n    i0.ɵɵelementStart(4, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_div_46_div_1_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.clearSearch();\n    });\n    i0.ɵɵtext(5, \"Clear Search\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.searchResults);\n  }\n}\n\nfunction TaskListComponent_div_46_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"p\");\n    i0.ɵɵtext(2, \"No tasks found. Create your first task!\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction TaskListComponent_div_46_div_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"app-task-item\", 35);\n    i0.ɵɵlistener(\"toggleComplete\", function TaskListComponent_div_46_div_2_div_2_Template_app_task_item_toggleComplete_1_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext(3);\n      return ctx_r19.toggleTaskCompletion($event);\n    })(\"delete\", function TaskListComponent_div_46_div_2_div_2_Template_app_task_item_delete_1_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext(3);\n      return ctx_r21.deleteTask($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const task_r18 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, task_r18.isCompleted));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"task\", task_r18);\n  }\n}\n\nfunction TaskListComponent_div_46_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, TaskListComponent_div_46_div_2_div_1_Template, 3, 0, \"div\", 36);\n    i0.ɵɵtemplate(2, TaskListComponent_div_46_div_2_div_2_Template, 2, 4, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.filteredTasks.length === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r8.filteredTasks);\n  }\n}\n\nfunction TaskListComponent_div_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtemplate(1, TaskListComponent_div_46_div_1_Template, 6, 1, \"div\", 31);\n    i0.ɵɵtemplate(2, TaskListComponent_div_46_div_2_Template, 3, 2, \"div\", 31);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.searchResults.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.searching && ctx_r4.searchResults.length === 0);\n  }\n}\n\nexport let TaskListComponent = /*#__PURE__*/(() => {\n  class TaskListComponent {\n    constructor(taskService) {\n      this.taskService = taskService;\n      this.tasks = [];\n      this.filteredTasks = [];\n      this.loading = false;\n      this.error = null; // For filtering\n\n      this.showCompleted = false;\n      this.selectedPriority = '';\n      this.selectedCategory = ''; // For searching\n\n      this.searchTerms = new Subject();\n      this.searchResults = [];\n      this.searching = false;\n    }\n\n    ngOnInit() {\n      this.loadTasks(); // Set up search with debounce\n\n      this.searchTerms.pipe(debounceTime(300), distinctUntilChanged(), switchMap(term => {\n        this.searching = true;\n        return term ? this.taskService.searchTasks(term) : new Observable(observer => {\n          observer.next({\n            success: true,\n            count: 0,\n            data: []\n          });\n          observer.complete();\n        });\n      })).subscribe({\n        next: response => {\n          const typedResponse = response;\n          this.searchResults = typedResponse.data;\n          this.searching = false;\n        },\n        error: error => {\n          console.error('Search error:', error);\n          this.searching = false;\n        }\n      });\n    }\n\n    loadTasks() {\n      this.loading = true;\n      this.taskService.getTasks({\n        completed: this.showCompleted,\n        priority: this.selectedPriority || undefined,\n        category: this.selectedCategory || undefined\n      }).subscribe({\n        next: response => {\n          this.tasks = response.data;\n          this.filteredTasks = [...this.tasks];\n          this.loading = false;\n        },\n        error: error => {\n          console.error('Error loading tasks:', error);\n          this.error = 'Failed to load tasks. Please try again.';\n          this.loading = false;\n        }\n      });\n    }\n\n    search(term) {\n      this.searchTerms.next(term);\n    }\n\n    clearSearch() {\n      this.searchResults = [];\n      this.searchTerms.next('');\n    }\n\n    toggleTaskCompletion(task) {\n      this.taskService.toggleTaskCompletion(task._id).subscribe({\n        next: response => {\n          const index = this.tasks.findIndex(t => t._id === task._id);\n\n          if (index !== -1) {\n            this.tasks[index] = response.data;\n            this.filteredTasks = [...this.tasks];\n          }\n        },\n        error: error => {\n          console.error('Error toggling task completion:', error);\n        }\n      });\n    }\n\n    deleteTask(id) {\n      if (confirm('Are you sure you want to delete this task?')) {\n        this.taskService.deleteTask(id).subscribe({\n          next: () => {\n            this.tasks = this.tasks.filter(task => task._id !== id);\n            this.filteredTasks = this.filteredTasks.filter(task => task._id !== id);\n          },\n          error: error => {\n            console.error('Error deleting task:', error);\n          }\n        });\n      }\n    }\n\n    applyFilters() {\n      this.loadTasks();\n    }\n\n    resetFilters() {\n      this.showCompleted = false;\n      this.selectedPriority = '';\n      this.selectedCategory = '';\n      this.loadTasks();\n    }\n\n  }\n\n  TaskListComponent.ɵfac = function TaskListComponent_Factory(t) {\n    return new (t || TaskListComponent)(i0.ɵɵdirectiveInject(i1.TaskService));\n  };\n\n  TaskListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskListComponent,\n    selectors: [[\"app-task-list\"]],\n    decls: 50,\n    vars: 7,\n    consts: [[1, \"task-list-container\"], [1, \"task-controls\"], [1, \"search-container\"], [\"type\", \"text\", \"placeholder\", \"Search tasks...\", 1, \"search-input\", 3, \"input\"], [\"searchBox\", \"\"], [\"class\", \"clear-search\", 3, \"click\", 4, \"ngIf\"], [1, \"filters\"], [1, \"filter-group\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\"], [\"value\", \"low\"], [\"value\", \"medium\"], [\"value\", \"high\"], [\"value\", \"general\"], [\"value\", \"work\"], [\"value\", \"personal\"], [\"value\", \"shopping\"], [\"value\", \"health\"], [1, \"filter-buttons\"], [1, \"apply-filters\", 3, \"click\"], [1, \"reset-filters\", 3, \"click\"], [\"class\", \"loading\", 4, \"ngIf\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"class\", \"task-list\", 4, \"ngIf\"], [1, \"add-task-button\"], [\"routerLink\", \"/tasks/new\"], [1, \"clear-search\", 3, \"click\"], [1, \"loading\"], [1, \"error-message\"], [1, \"task-list\"], [4, \"ngIf\"], [\"class\", \"task-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"clear-search-btn\", 3, \"click\"], [1, \"task-item\", 3, \"ngClass\"], [3, \"task\", \"toggleComplete\", \"delete\"], [\"class\", \"no-tasks\", 4, \"ngIf\"], [1, \"no-tasks\"]],\n    template: function TaskListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r22 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"input\", 3, 4);\n        i0.ɵɵlistener(\"input\", function TaskListComponent_Template_input_input_3_listener() {\n          i0.ɵɵrestoreView(_r22);\n\n          const _r0 = i0.ɵɵreference(4);\n\n          return ctx.search(_r0.value);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, TaskListComponent_button_5_Template, 2, 0, \"button\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 6)(7, \"div\", 7)(8, \"label\")(9, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function TaskListComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.showCompleted = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(10, \" Show completed \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\");\n        i0.ɵɵtext(13, \"Priority:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"select\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function TaskListComponent_Template_select_ngModelChange_14_listener($event) {\n          return ctx.selectedPriority = $event;\n        });\n        i0.ɵɵelementStart(15, \"option\", 10);\n        i0.ɵɵtext(16, \"All\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"option\", 11);\n        i0.ɵɵtext(18, \"Low\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"option\", 12);\n        i0.ɵɵtext(20, \"Medium\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"option\", 13);\n        i0.ɵɵtext(22, \"High\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(23, \"div\", 7)(24, \"label\");\n        i0.ɵɵtext(25, \"Category:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"select\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function TaskListComponent_Template_select_ngModelChange_26_listener($event) {\n          return ctx.selectedCategory = $event;\n        });\n        i0.ɵɵelementStart(27, \"option\", 10);\n        i0.ɵɵtext(28, \"All\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"option\", 14);\n        i0.ɵɵtext(30, \"General\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"option\", 15);\n        i0.ɵɵtext(32, \"Work\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"option\", 16);\n        i0.ɵɵtext(34, \"Personal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"option\", 17);\n        i0.ɵɵtext(36, \"Shopping\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"option\", 18);\n        i0.ɵɵtext(38, \"Health\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(39, \"div\", 19)(40, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_40_listener() {\n          return ctx.applyFilters();\n        });\n        i0.ɵɵtext(41, \"Apply Filters\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"button\", 21);\n        i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_42_listener() {\n          return ctx.resetFilters();\n        });\n        i0.ɵɵtext(43, \"Reset\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵtemplate(44, TaskListComponent_div_44_Template, 3, 0, \"div\", 22);\n        i0.ɵɵtemplate(45, TaskListComponent_div_45_Template, 2, 1, \"div\", 23);\n        i0.ɵɵtemplate(46, TaskListComponent_div_46_Template, 3, 2, \"div\", 24);\n        i0.ɵɵelementStart(47, \"div\", 25)(48, \"button\", 26);\n        i0.ɵɵtext(49, \"+ New Task\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(4);\n\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", _r0.value);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.showCompleted);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedPriority);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedCategory);\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n      }\n    },\n    directives: [i2.NgIf, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.NgModel, i3.SelectControlValueAccessor, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i2.NgForOf, i2.NgClass, i4.TaskItemComponent, i5.RouterLink],\n    styles: [\"\"]\n  });\n  return TaskListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}