{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/task.service\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\n\nfunction DashboardComponent_div_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"p\");\n    i0.ɵɵtext(2, \"Loading tasks...\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction DashboardComponent_div_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"p\");\n    i0.ɵɵtext(2, \"No upcoming tasks in the next 3 days.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 19);\n    i0.ɵɵtext(4, \"Create a Task\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction DashboardComponent_div_50_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\", 23)(2, \"input\", 24);\n    i0.ɵɵlistener(\"change\", function DashboardComponent_div_50_div_1_Template_input_change_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const task_r10 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.toggleTaskCompletion(task_r10);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"div\", 25)(4, \"h4\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 26)(7, \"span\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"span\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const task_r10 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"checked\", task_r10.isCompleted);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r10.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"overdue\", task_r10.deadline < ctx_r9.today);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Due: \", ctx_r9.formatDate(task_r10.deadline), \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMapInterpolate1(\"task-priority \", task_r10.priority, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r10.priority);\n  }\n}\n\nfunction DashboardComponent_div_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, DashboardComponent_div_50_div_1_Template, 11, 9, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.upcomingTasks);\n  }\n}\n\nfunction DashboardComponent_div_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"p\");\n    i0.ɵɵtext(2, \"Loading tasks...\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction DashboardComponent_div_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"p\");\n    i0.ɵɵtext(2, \"No overdue tasks! You're all caught up.\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction DashboardComponent_div_58_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\", 23)(2, \"input\", 24);\n    i0.ɵɵlistener(\"change\", function DashboardComponent_div_58_div_1_Template_input_change_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const task_r14 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.toggleTaskCompletion(task_r14);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"div\", 25)(4, \"h4\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 26)(7, \"span\", 28);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"span\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const task_r14 = ctx.$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"checked\", task_r14.isCompleted);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r14.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Due: \", ctx_r13.formatDate(task_r14.deadline), \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMapInterpolate1(\"task-priority \", task_r14.priority, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r14.priority);\n  }\n}\n\nfunction DashboardComponent_div_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, DashboardComponent_div_58_div_1_Template, 11, 7, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.overdueTasks);\n  }\n}\n\nfunction DashboardComponent_div_64_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"p\");\n    i0.ɵɵtext(2, \"Loading tasks...\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction DashboardComponent_div_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"p\");\n    i0.ɵɵtext(2, \"You haven't completed any tasks yet.\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction DashboardComponent_div_66_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 31)(1, \"div\", 23)(2, \"input\", 24);\n    i0.ɵɵlistener(\"change\", function DashboardComponent_div_66_div_1_Template_input_change_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const task_r18 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.toggleTaskCompletion(task_r18);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"div\", 25)(4, \"h4\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 26)(7, \"span\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const task_r18 = ctx.$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"checked\", task_r18.isCompleted);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r18.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Completed: \", ctx_r17.formatDate(task_r18.completedAt || ctx_r17.today), \"\");\n  }\n}\n\nfunction DashboardComponent_div_66_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, DashboardComponent_div_66_div_1_Template, 9, 3, \"div\", 30);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r8.recentlyCompletedTasks);\n  }\n}\n\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(taskService, authService) {\n      this.taskService = taskService;\n      this.authService = authService;\n      this.user = null;\n      this.upcomingTasks = [];\n      this.overdueTasks = [];\n      this.recentlyCompletedTasks = [];\n      this.loading = {\n        user: false,\n        upcoming: false,\n        overdue: false,\n        completed: false\n      };\n      this.error = null;\n      this.today = new Date(); // Stats\n\n      this.totalTasks = 0;\n      this.completedTasks = 0;\n      this.completionRate = 0;\n    }\n\n    ngOnInit() {\n      this.loadUserData();\n      this.loadTaskData();\n    }\n\n    loadUserData() {\n      this.loading.user = true;\n      this.authService.user$.subscribe({\n        next: user => {\n          this.user = user;\n          this.loading.user = false;\n        },\n        error: error => {\n          console.error('Error loading user data:', error);\n          this.loading.user = false;\n        }\n      });\n    }\n\n    loadTaskData() {\n      // Load upcoming tasks (due in the next 3 days)\n      this.loading.upcoming = true;\n      const threeDaysFromNow = new Date();\n      threeDaysFromNow.setDate(threeDaysFromNow.getDate() + 3);\n      this.taskService.getTasks({\n        completed: false\n      }).subscribe({\n        next: response => {\n          const allTasks = response.data;\n          this.totalTasks = allTasks.length; // Filter for upcoming tasks\n\n          this.upcomingTasks = allTasks.filter(task => {\n            const deadline = new Date(task.deadline);\n            return deadline <= threeDaysFromNow && deadline >= this.today;\n          }).sort((a, b) => new Date(a.deadline).getTime() - new Date(b.deadline).getTime()); // Filter for overdue tasks\n\n          this.overdueTasks = allTasks.filter(task => {\n            return new Date(task.deadline) < this.today;\n          });\n          this.loading.upcoming = false;\n        },\n        error: error => {\n          console.error('Error loading upcoming tasks:', error);\n          this.error = 'Failed to load task data';\n          this.loading.upcoming = false;\n        }\n      }); // Load recently completed tasks\n\n      this.loading.completed = true;\n      this.taskService.getTasks({\n        completed: true\n      }).subscribe({\n        next: response => {\n          const completedTasks = response.data;\n          this.completedTasks = completedTasks.length;\n\n          if (this.totalTasks > 0) {\n            this.completionRate = Math.round(this.completedTasks / this.totalTasks * 100);\n          } // Get 5 most recently completed tasks\n\n\n          this.recentlyCompletedTasks = completedTasks.sort((a, b) => {\n            const dateA = a.completedAt ? new Date(a.completedAt).getTime() : 0;\n            const dateB = b.completedAt ? new Date(b.completedAt).getTime() : 0;\n            return dateB - dateA;\n          }).slice(0, 5);\n          this.loading.completed = false;\n        },\n        error: error => {\n          console.error('Error loading completed tasks:', error);\n          this.loading.completed = false;\n        }\n      });\n    }\n\n    formatDate(date) {\n      return new Date(date).toLocaleDateString();\n    }\n\n    toggleTaskCompletion(task) {\n      this.taskService.toggleTaskCompletion(task._id).subscribe({\n        next: () => {\n          // Reload task data to reflect changes\n          this.loadTaskData();\n        },\n        error: error => {\n          console.error('Error toggling task completion:', error);\n        }\n      });\n    }\n\n  }\n\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 67,\n    vars: 18,\n    consts: [[1, \"dashboard-container\"], [1, \"welcome-section\"], [1, \"dashboard-stats\"], [1, \"stat-card\"], [1, \"stat-icon\"], [1, \"stat-content\"], [1, \"stat-value\"], [1, \"dashboard-grid\"], [1, \"dashboard-card\"], [1, \"card-header\"], [\"routerLink\", \"/tasks\", 1, \"view-all\"], [1, \"card-content\"], [\"class\", \"loading-indicator\", 4, \"ngIf\"], [\"class\", \"empty-state\", 4, \"ngIf\"], [\"class\", \"task-list\", 4, \"ngIf\"], [\"class\", \"task-list overdue-list\", 4, \"ngIf\"], [\"class\", \"task-list completed-list\", 4, \"ngIf\"], [1, \"loading-indicator\"], [1, \"empty-state\"], [\"routerLink\", \"/tasks/new\", 1, \"create-task-button\"], [1, \"task-list\"], [\"class\", \"task-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"task-item\"], [1, \"task-checkbox\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"], [1, \"task-details\"], [1, \"task-date\"], [1, \"task-list\", \"overdue-list\"], [1, \"overdue\"], [1, \"task-list\", \"completed-list\"], [\"class\", \"task-item completed\", 4, \"ngFor\", \"ngForOf\"], [1, \"task-item\", \"completed\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\");\n        i0.ɵɵtext(5);\n        i0.ɵɵpipe(6, \"date\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 2)(8, \"div\", 3)(9, \"div\", 4);\n        i0.ɵɵtext(10, \"\\uD83D\\uDCDD\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 5)(12, \"h3\");\n        i0.ɵɵtext(13, \"Total Tasks\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"p\", 6);\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"div\", 3)(17, \"div\", 4);\n        i0.ɵɵtext(18, \"\\u2705\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 5)(20, \"h3\");\n        i0.ɵɵtext(21, \"Completed\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"p\", 6);\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"div\", 3)(25, \"div\", 4);\n        i0.ɵɵtext(26, \"\\uD83D\\uDCCA\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 5)(28, \"h3\");\n        i0.ɵɵtext(29, \"Completion Rate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"p\", 6);\n        i0.ɵɵtext(31);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(32, \"div\", 3)(33, \"div\", 4);\n        i0.ɵɵtext(34, \"\\u26A0\\uFE0F\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 5)(36, \"h3\");\n        i0.ɵɵtext(37, \"Overdue\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"p\", 6);\n        i0.ɵɵtext(39);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(40, \"div\", 7)(41, \"div\", 8)(42, \"div\", 9)(43, \"h3\");\n        i0.ɵɵtext(44, \"Upcoming Tasks\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"a\", 10);\n        i0.ɵɵtext(46, \"View All\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(47, \"div\", 11);\n        i0.ɵɵtemplate(48, DashboardComponent_div_48_Template, 3, 0, \"div\", 12);\n        i0.ɵɵtemplate(49, DashboardComponent_div_49_Template, 5, 0, \"div\", 13);\n        i0.ɵɵtemplate(50, DashboardComponent_div_50_Template, 2, 1, \"div\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(51, \"div\", 8)(52, \"div\", 9)(53, \"h3\");\n        i0.ɵɵtext(54, \"Overdue Tasks\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(55, \"div\", 11);\n        i0.ɵɵtemplate(56, DashboardComponent_div_56_Template, 3, 0, \"div\", 12);\n        i0.ɵɵtemplate(57, DashboardComponent_div_57_Template, 3, 0, \"div\", 13);\n        i0.ɵɵtemplate(58, DashboardComponent_div_58_Template, 2, 1, \"div\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(59, \"div\", 8)(60, \"div\", 9)(61, \"h3\");\n        i0.ɵɵtext(62, \"Recently Completed\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(63, \"div\", 11);\n        i0.ɵɵtemplate(64, DashboardComponent_div_64_Template, 3, 0, \"div\", 12);\n        i0.ɵɵtemplate(65, DashboardComponent_div_65_Template, 3, 0, \"div\", 13);\n        i0.ɵɵtemplate(66, DashboardComponent_div_66_Template, 2, 1, \"div\", 16);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Welcome, \", (ctx.user == null ? null : ctx.user.name) || \"User\", \"!\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Here's your task overview for today: \", i0.ɵɵpipeBind2(6, 15, ctx.today, \"fullDate\"), \"\");\n        i0.ɵɵadvance(10);\n        i0.ɵɵtextInterpolate(ctx.totalTasks);\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(ctx.completedTasks);\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate1(\"\", ctx.completionRate, \"%\");\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(ctx.overdueTasks.length);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading.upcoming);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading.upcoming && ctx.upcomingTasks.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading.upcoming && ctx.upcomingTasks.length > 0);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading.upcoming);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading.upcoming && ctx.overdueTasks.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading.upcoming && ctx.overdueTasks.length > 0);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading.completed);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading.completed && ctx.recentlyCompletedTasks.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading.completed && ctx.recentlyCompletedTasks.length > 0);\n      }\n    },\n    directives: [i3.RouterLinkWithHref, i4.NgIf, i3.RouterLink, i4.NgForOf],\n    pipes: [i4.DatePipe],\n    styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  {// webpackBootstrap \\\"use strict\\\";})()[_ngcontent-%COMP%] ;{%BLOCK%}\"]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}