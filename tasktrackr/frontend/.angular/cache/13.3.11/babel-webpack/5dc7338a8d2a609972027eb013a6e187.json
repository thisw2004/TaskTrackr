{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/task.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\n\nfunction TaskFormComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"p\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction TaskFormComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.error, \" \");\n  }\n}\n\nfunction TaskFormComponent_form_5_div_5_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Title is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TaskFormComponent_form_5_div_5_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Title cannot exceed 100 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TaskFormComponent_form_5_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, TaskFormComponent_form_5_div_5_span_1_Template, 2, 0, \"span\", 30);\n    i0.ɵɵtemplate(2, TaskFormComponent_form_5_div_5_span_2_Template, 2, 0, \"span\", 30);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r3.taskForm.get(\"title\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r3.taskForm.get(\"title\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"maxlength\"]);\n  }\n}\n\nfunction TaskFormComponent_form_5_div_10_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Description cannot exceed 1000 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TaskFormComponent_form_5_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, TaskFormComponent_form_5_div_10_span_1_Template, 2, 0, \"span\", 30);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r4.taskForm.get(\"description\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"maxlength\"]);\n  }\n}\n\nfunction TaskFormComponent_form_5_div_15_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Deadline is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TaskFormComponent_form_5_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, TaskFormComponent_form_5_div_15_span_1_Template, 2, 0, \"span\", 30);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r5.taskForm.get(\"deadline\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\n\nfunction TaskFormComponent_form_5_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"titlecase\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const category_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, category_r12), \" \");\n  }\n}\n\nfunction TaskFormComponent_form_5_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵelement(1, \"input\", 33);\n    i0.ɵɵelementStart(2, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function TaskFormComponent_form_5_div_35_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const i_r14 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.removeTag(i_r14);\n    });\n    i0.ɵɵtext(3, \"\\u00D7\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const i_r14 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", i_r14);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"invalid\": a0\n  };\n};\n\nfunction TaskFormComponent_form_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 6);\n    i0.ɵɵlistener(\"ngSubmit\", function TaskFormComponent_form_5_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.onSubmit();\n    });\n    i0.ɵɵelementStart(1, \"div\", 7)(2, \"label\", 8);\n    i0.ɵɵtext(3, \"Title *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 9);\n    i0.ɵɵtemplate(5, TaskFormComponent_form_5_div_5_Template, 3, 2, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 7)(7, \"label\", 11);\n    i0.ɵɵtext(8, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"textarea\", 12);\n    i0.ɵɵtemplate(10, TaskFormComponent_form_5_div_10_Template, 2, 1, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 13);\n    i0.ɵɵtext(13, \"Deadline *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 14);\n    i0.ɵɵtemplate(15, TaskFormComponent_form_5_div_15_Template, 2, 1, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 7)(17, \"label\", 15);\n    i0.ɵɵtext(18, \"Priority\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"select\", 16)(20, \"option\", 17);\n    i0.ɵɵtext(21, \"Low\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"option\", 18);\n    i0.ɵɵtext(23, \"Medium\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"option\", 19);\n    i0.ɵɵtext(25, \"High\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(26, \"div\", 7)(27, \"label\", 20);\n    i0.ɵɵtext(28, \"Category\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"select\", 21);\n    i0.ɵɵtemplate(30, TaskFormComponent_form_5_option_30_Template, 3, 4, \"option\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"div\", 7)(32, \"label\");\n    i0.ɵɵtext(33, \"Tags\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"div\", 23);\n    i0.ɵɵtemplate(35, TaskFormComponent_form_5_div_35_Template, 4, 1, \"div\", 24);\n    i0.ɵɵelementStart(36, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function TaskFormComponent_form_5_Template_button_click_36_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.addTag();\n    });\n    i0.ɵɵtext(37, \"+ Add Tag\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(38, \"div\", 26)(39, \"button\", 27);\n    i0.ɵɵtext(40, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"button\", 28);\n    i0.ɵɵtext(42);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_5_0;\n    let tmp_6_0;\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.taskForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ((tmp_1_0 = ctx_r2.taskForm.get(\"title\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx_r2.taskForm.get(\"title\")) == null ? null : tmp_1_0.touched)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r2.taskForm.get(\"title\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx_r2.taskForm.get(\"title\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ((tmp_3_0 = ctx_r2.taskForm.get(\"description\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx_r2.taskForm.get(\"description\")) == null ? null : tmp_3_0.touched)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx_r2.taskForm.get(\"description\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx_r2.taskForm.get(\"description\")) == null ? null : tmp_4_0.touched));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ((tmp_5_0 = ctx_r2.taskForm.get(\"deadline\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx_r2.taskForm.get(\"deadline\")) == null ? null : tmp_5_0.touched)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx_r2.taskForm.get(\"deadline\")) == null ? null : tmp_6_0.invalid) && ((tmp_6_0 = ctx_r2.taskForm.get(\"deadline\")) == null ? null : tmp_6_0.touched));\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.categories);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.tagsFormArray.controls);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.taskForm.invalid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.isEditMode ? \"Update Task\" : \"Create Task\");\n  }\n}\n\nexport let TaskFormComponent = /*#__PURE__*/(() => {\n  class TaskFormComponent {\n    constructor(fb, taskService, route, router) {\n      this.fb = fb;\n      this.taskService = taskService;\n      this.route = route;\n      this.router = router;\n      this.isEditMode = false;\n      this.taskId = null;\n      this.loading = false;\n      this.error = null;\n      this.categories = ['general', 'work', 'personal', 'shopping', 'health'];\n    }\n\n    ngOnInit() {\n      this.initForm(); // Check if we're in edit mode\n\n      this.taskId = this.route.snapshot.paramMap.get('id');\n\n      if (this.taskId) {\n        this.isEditMode = true;\n        this.loadTask(this.taskId);\n      }\n    }\n\n    initForm() {\n      this.taskForm = this.fb.group({\n        title: ['', [Validators.required, Validators.maxLength(100)]],\n        description: ['', Validators.maxLength(1000)],\n        deadline: ['', Validators.required],\n        priority: ['medium', Validators.required],\n        category: ['general'],\n        tags: this.fb.array([])\n      });\n    }\n\n    loadTask(id) {\n      this.loading = true;\n      this.taskService.getTask(id).subscribe({\n        next: response => {\n          const task = response.data; // Convert deadline to input format (yyyy-MM-ddThh:mm)\n\n          const deadline = new Date(task.deadline);\n          const formattedDeadline = deadline.toISOString().substring(0, 16);\n          this.taskForm.patchValue({\n            title: task.title,\n            description: task.description || '',\n            deadline: formattedDeadline,\n            priority: task.priority,\n            category: task.category || 'general'\n          }); // Add tags if they exist\n\n          if (task.tags && task.tags.length > 0) {\n            const tagsFormArray = this.taskForm.get('tags');\n            task.tags.forEach(tag => {\n              tagsFormArray.push(this.fb.control(tag));\n            });\n          }\n\n          this.loading = false;\n        },\n        error: error => {\n          console.error('Error loading task:', error);\n          this.error = 'Failed to load task. Please try again.';\n          this.loading = false;\n        }\n      });\n    }\n\n    get tagsFormArray() {\n      return this.taskForm.get('tags');\n    }\n\n    addTag() {\n      this.tagsFormArray.push(this.fb.control(''));\n    }\n\n    removeTag(index) {\n      this.tagsFormArray.removeAt(index);\n    }\n\n    onSubmit() {\n      if (this.taskForm.invalid) {\n        this.taskForm.markAllAsTouched();\n        return;\n      }\n\n      const taskData = this.taskForm.value;\n      this.loading = true;\n\n      if (this.isEditMode && this.taskId) {\n        // Update existing task\n        this.taskService.updateTask(this.taskId, taskData).subscribe({\n          next: () => {\n            this.router.navigate(['/tasks']);\n          },\n          error: error => {\n            console.error('Error updating task:', error);\n            this.error = 'Failed to update task. Please try again.';\n            this.loading = false;\n          }\n        });\n      } else {\n        // Create new task\n        this.taskService.createTask(taskData).subscribe({\n          next: () => {\n            this.router.navigate(['/tasks']);\n          },\n          error: error => {\n            console.error('Error creating task:', error);\n            this.error = 'Failed to create task. Please try again.';\n            this.loading = false;\n          }\n        });\n      }\n    }\n\n  }\n\n  TaskFormComponent.ɵfac = function TaskFormComponent_Factory(t) {\n    return new (t || TaskFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TaskService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  TaskFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskFormComponent,\n    selectors: [[\"app-task-form\"]],\n    decls: 6,\n    vars: 4,\n    consts: [[1, \"task-form-container\"], [\"class\", \"loading\", 4, \"ngIf\"], [\"class\", \"error-message\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [1, \"loading\"], [1, \"error-message\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\", \"placeholder\", \"Task title\", 3, \"ngClass\"], [\"class\", \"error-hint\", 4, \"ngIf\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\", \"placeholder\", \"Task description\", \"rows\", \"4\", 3, \"ngClass\"], [\"for\", \"deadline\"], [\"type\", \"datetime-local\", \"id\", \"deadline\", \"formControlName\", \"deadline\", 3, \"ngClass\"], [\"for\", \"priority\"], [\"id\", \"priority\", \"formControlName\", \"priority\"], [\"value\", \"low\"], [\"value\", \"medium\"], [\"value\", \"high\"], [\"for\", \"category\"], [\"id\", \"category\", \"formControlName\", \"category\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formArrayName\", \"tags\", 1, \"tags-container\"], [\"class\", \"tag-input\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"add-tag\", 3, \"click\"], [1, \"form-actions\"], [\"type\", \"button\", \"routerLink\", \"/tasks\", 1, \"cancel-btn\"], [\"type\", \"submit\", 1, \"submit-btn\", 3, \"disabled\"], [1, \"error-hint\"], [4, \"ngIf\"], [3, \"value\"], [1, \"tag-input\"], [\"type\", \"text\", \"placeholder\", \"Tag\", 3, \"formControlName\"], [\"type\", \"button\", 1, \"remove-tag\", 3, \"click\"]],\n    template: function TaskFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, TaskFormComponent_div_3_Template, 3, 0, \"div\", 1);\n        i0.ɵɵtemplate(4, TaskFormComponent_div_4_Template, 2, 1, \"div\", 2);\n        i0.ɵɵtemplate(5, TaskFormComponent_form_5_Template, 43, 17, \"form\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Edit Task\" : \"Create New Task\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n      }\n    },\n    directives: [i4.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i4.NgClass, i1.SelectControlValueAccessor, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i4.NgForOf, i1.FormArrayName, i3.RouterLink],\n    pipes: [i4.TitleCasePipe],\n    styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  {// webpackBootstrap \\\"use strict\\\";})()[_ngcontent-%COMP%] ;{%BLOCK%}\"]\n  });\n  return TaskFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}